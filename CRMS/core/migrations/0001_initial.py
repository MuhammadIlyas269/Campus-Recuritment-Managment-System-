# Generated by Django 3.1.6 on 2021-02-27 13:35

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=25, null=True)),
                ('city', models.CharField(max_length=25, null=True)),
                ('state', models.CharField(max_length=25, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(null=True)),
                ('industry', models.CharField(max_length=100, null=True)),
                ('eligibility_criteria', models.TextField(null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('expiry', models.DateField()),
                ('flyer', models.ImageField(blank=True, null=True, upload_to='images/jobs/')),
                ('gender_preference', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('np', 'No preference')], default='np', max_length=2)),
                ('employment_type', models.CharField(choices=[('p', 'Permanent'), ('p_t', 'PartTime'), ('Intern', 'Internship'), ('Contact', 'ContractBase')], max_length=25)),
                ('status', models.BooleanField(default=True, help_text='show the job recuritment Status')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.user')),
                ('registration_no', models.CharField(max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
                ('about', models.TextField()),
                ('comp_email', models.EmailField(max_length=254)),
                ('contact', models.CharField(max_length=25, null=True)),
                ('social_link', models.URLField(max_length=255, null=True)),
                ('website', models.URLField(max_length=255, null=True)),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.companyaddress')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.user')),
                ('stud_id', models.CharField(max_length=25, null=True)),
                ('name', models.CharField(max_length=50)),
                ('about_me', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('profile_pic', models.ImageField(null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=25, null=True)),
                ('city', models.CharField(max_length=25, null=True)),
            ],
            options={
                'unique_together': {('country', 'city')},
            },
        ),
        migrations.CreateModel(
            name='WorkHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, null=True)),
                ('designation', models.CharField(max_length=50, null=True)),
                ('working_period', models.CharField(max_length=50, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentAddress', to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to='core.studentaddress'),
        ),
        migrations.AddField(
            model_name='student',
            name='skill',
            field=models.ManyToManyField(blank=True, related_name='student_skills', to='core.Skill'),
        ),
        migrations.CreateModel(
            name='SaveJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Job', to='core.job')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Student', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=50, null=True)),
                ('degree', models.CharField(max_length=50, null=True)),
                ('sessions', models.CharField(max_length=50, null=True)),
                ('grade', models.CharField(max_length=50, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Qualification', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, null=True)),
                ('about', models.TextField(blank=True, max_length=250, null=True)),
                ('certifications', models.ImageField(blank=True, null=True, unique=True, upload_to='images/')),
                ('period', models.DateField(null=True)),
                ('demo', models.URLField(blank=True, max_length=250, null=True, unique=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project', to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='applicants',
            field=models.ManyToManyField(blank=True, related_name='Applicants', to='core.Student'),
        ),
        migrations.AddField(
            model_name='job',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core.company'),
        ),
        migrations.AddField(
            model_name='company',
            name='followers',
            field=models.ManyToManyField(blank=True, related_name='Company_followers', to='core.Student'),
        ),
        migrations.CreateModel(
            name='Alumni',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, null=True)),
                ('working_from', models.DateField()),
                ('designation', models.CharField(max_length=100, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_alumni', to='core.company')),
                ('student', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumni', to='core.student')),
            ],
        ),
    ]
